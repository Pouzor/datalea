{% extends "base.html.twig" %}

{% set currentPage = 'generate' %}

{% form_theme form 'datalea/form/fields.html.twig' %}

{% block header_content %}

    {% include 'datalea/config_file_form.html.twig' with {'form': configFileForm} %}

{% endblock header_content %}


{% block main_body %}

<form action="{{ path('datalea_generate') }}" method="post" {{ form_enctype(form) }}>

{% if form.vars.errors|length > 0 %}
<section class="section">
    <div class="container">
    
        <div class="alert alert-error">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <div class="control-group error"> 
                {{ form_errors(form) }}
            </div>
        </div>
    </div>
</section>
{% endif %}
    
<section id="variables" class="form-horizontal section">
    <div class="container">
        {{ form_row(form.variableConfigs) }}
    </div>
</section>

<section id="column-configs" class="form-horizontal section gray">    
    <div class="container">
        {{ form_row(form.columnConfigs) }}
    </div>
</section>
    
<section class="section">    
    <div class="container">    
        <div class="row">
            <div class="span6">
                <fieldset>
                    <legend>{{ 'generator.form.settings.title' | trans }}</legend>
                    <div class="row">
                        <div class="span3">
                            {{ form_row(form.className) }}
                        </div>
                        <div class="span3">
                            {{ form_row(form.locale) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="span3">
                            {{ form_row(form.seed) }}
                        </div>
                        <div class="span3">
                            {{ form_row(form.fakeNumber) }}
                        </div>
                    </div>
                </fieldset>
            </div>

            <div class="span6">
                <fieldset>
                    <legend>{{ 'generator.form.output.title' | trans }}</legend>
                    {{ form_row(form.formats) }}
                    <p><i class="icon-plus"></i> Generator XML Configuration</p>
                </fieldset>
            </div>
        </div>
        <div class="row">
            <div class="span12">
                <fieldset id="csv-options">
                    <legend>{{ 'generator.form.csv.title' | trans }}</legend>
                    <div class="row">
                        <div class="span6">
                            <div class="row">
                                <div class="span3">
                                    {{ form_row(form.csvFormat.encoding) }}
                                </div>
                                <div class="span3">
                                    {{ form_row(form.csvFormat.eol) }}
                                </div>
                            </div>
                        </div>

                        <div class="span6">
                            <div class="row">
                                <div class="span1">
                                    {{ form_row(form.csvFormat.delimiter) }}
                                </div>
                                <div class="span1">
                                    {{ form_row(form.csvFormat.enclosure) }}
                                </div>
                                <div class="span1">
                                    {{ form_row(form.csvFormat.escape) }}
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <hr />
            </div>
            
        </div>
        {{ form_rest(form) }}
         <div class="row">
            <div class="offset4 span4">
                <input type="submit" class="btn btn-large btn-block btn-primary" value="{{ 'Generate' | trans }}" />
            </div>
            <div class="span1">
                <a href="{{ path('datalea_generate', {'reset': 1}) }}" class="btn btn-block btn-warning" title="{{ 'Reset the generator config' | trans }}">{{ 'Reset' | trans }}</a>
            </div>
        </div>
    </div>
</section>
    
</form>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script type=text/javascript>

jQuery(document).ready(function() {
    var fakerMethods = {{ fakerMethods|json_encode()|raw }};
    var fakerMethodsCulture = {{ fakerMethodsCulture|json_encode()|raw }};
    
    var $columnCollectionHolder = $('#datalea_generator_config_columnConfigs');
    var addColumnConfigSelector = '.add-columnConfigs';
    var $variableCollectionHolder = $('#datalea_generator_config_variableConfigs');
    var addVariableConfigSelector = '.add-variableConfigs';
    var removeConfigSelector = '.remove-collection-item-form';
    var $csvFormatOption = $('input[type="checkbox"][name^="datalea_generator_config"][value="csv"]')
    var $csvOptions = $('#csv-options');

    $(addColumnConfigSelector).on('click', function(e) {
        addConfigForm($columnCollectionHolder);
    });

    $(addVariableConfigSelector).on('click', function(e) {
        addConfigForm($variableCollectionHolder);
    });

    addRemoveConfigListener($(removeConfigSelector));

    $('select.select2-box').select2({
        width: 'resolve',
    });

    $('select.select2-empty-box').select2({
        width: 'resolve',
        allowClear: true,
        placeholder: 'select'
    });

    $('.required-asterisk').tooltip({
        title: 'required field'
    });

    $('.help-popover').popover({
        html: true
        /*trigger: 'hover'*/
    });

    $('.help-popover').click(function(e){
        e.preventDefault();
    });

    $csvOptions.toggle($csvFormatOption.prop("checked"));

    $csvFormatOption.click(function(e){
        $csvOptions.toggle($(this).prop("checked"));
    });

    function addRemoveConfigListener($object)
    {
        $object.on('click', function(e) {
            $(this).parent().remove();
        });
    }

    function addConfigForm($collectionHolder)
    {
        var prototype = $collectionHolder.attr('data-prototype');
        var newForm = prototype.replace(/__name__/g, $collectionHolder.children().length);
        var elt = $collectionHolder.append(newForm);
        $collectionHolder.find('select.select2-box').select2({
            width: 'resolve'
        });

        $collectionHolder.find('select.select2-empty-box').select2({
            width: 'resolve',
            allowClear: true,
            placeholder: 'select'
        });
        addRemoveConfigListener($collectionHolder.find(removeConfigSelector));
    }
});
</script>

{% endblock %}
